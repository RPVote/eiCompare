# Run styler and lintr checks
# https://github.com/r-lib/styler
# https://github.com/jimhester/lintr

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Styler

jobs:
  check-style:
    env:
      RSPM: "https://cloud.r-project.org"
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@master
        with:
           r-version: 'release'

      - name: Report R Version
        run: |
          which R
          R --version

      - name: Query dependencies for cache
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "18.04"), sep = "\n")')

      - name: Install dependencies
        run: |
          install.packages("stringi", type="source")
          install.packages(c("remotes", "styler"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("lintr")
        shell: Rscript {0}

      - name: Style
        run: Rscript -e 'styler::style_pkg()'

      - name: Lint
        run: lintr::lint_package()
        shell: Rscript {0}
